-- Code generated by eluna-annotations-generator, PLEASE DO NOT EDIT

---@class Spell
local Spell = {}

---
--- Returns `true` if the [Spell] is automatically repeating, `false` otherwise.
---
---@return bool @ isAutoRepeating
function Spell:IsAutoRepeat() end

---
--- Returns the [Unit] that casted the [Spell].
---
---@return Unit @ caster
function Spell:GetCaster() end

---
--- Returns the cast time of the [Spell].
---
---@return int32 @ castTime
function Spell:GetCastTime() end

---
--- Returns the entry ID of the [Spell].
---
---@return uint32 @ entryId
function Spell:GetEntry() end

---
--- Returns the power cost of the [Spell].
---
---@return uint32 @ powerCost
function Spell:GetPowerCost() end

---
--- Returns the spell duration of the [Spell].
---
---@return int32 @ duration
function Spell:GetDuration() end

---
--- Returns the target destination coordinates of the [Spell].
---
---@return float @ z, : z coordinate of the [Spell]
function Spell:GetTargetDest() end

---
--- Returns the target [Object] of the [Spell].
---
--- The target can be any of the following [Object] types:
--- - [Player]
--- - [Creature]
--- - [GameObject]
--- - [Item]
--- - [Corpse]
---
---@return Object @ target
function Spell:GetTarget() end

---
--- Sets the [Spell] to automatically repeat.
---
---@param isRepeat bool @ : set variable to 'true' for spell to automatically repeat
function Spell:SetAutoRepeat(isRepeat) end

---
--- Casts the [Spell].
---
---@param skipCheck bool @ = false : skips initial checks to see if the [Spell] can be casted or not, this is optional
function Spell:Cast(skipCheck) end

---
--- Cancels the [Spell].
function Spell:Cancel() end

---
--- Finishes the [Spell].
function Spell:Finish() end

return Spell

