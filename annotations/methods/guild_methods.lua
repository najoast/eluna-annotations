-- Code generated by eluna-annotations-generator, PLEASE DO NOT EDIT

---@class Guild
local Guild = {}

---
--- Returns a table with the [Player]s in this [Guild]
---
--- Only the players that are online and on some map.
---
---@return table @ guildPlayers, : table of [Player]s
function Guild:GetMembers() end

---
--- Returns the member count of this [Guild]
---
---@return uint32 @ memberCount
function Guild:GetMemberCount() end

---
--- Finds and returns the [Guild] leader by their GUID if logged in
---
---@return Player @ leader
function Guild:GetLeader() end

---
--- Returns [Guild] leader GUID
---
---@return ObjectGuid @ leaderGUID
function Guild:GetLeaderGUID() end

---
--- Returns the [Guild]s entry ID
---
---@return uint32 @ entryId
function Guild:GetId() end

---
--- Returns the [Guild]s name
---
---@return string @ guildName
function Guild:GetName() end

---
--- Returns the [Guild]s current Message Of The Day
---
---@return string @ guildMOTD
function Guild:GetMOTD() end

---
--- Returns the [Guild]s current info
---
---@return string @ guildInfo
function Guild:GetInfo() end

---
--- Sets the leader of this [Guild]
---
---@param leader Player @ : the [Player] leader to change
function Guild:SetLeader(leader) end

---
--- Sets the information of the bank tab specified
---
---@param tabId uint8 @ : the ID of the tab specified
---@param info string @ : the information to be set to the bank tab
function Guild:SetBankTabText(tabId, info) end

---
--- Sends a [WorldPacket] to all the [Player]s in the [Guild]
---
---@param packet WorldPacket @ : the [WorldPacket] to be sent to the [Player]s
function Guild:SendPacket(packet) end

---
--- Sends a [WorldPacket] to all the [Player]s at the specified rank in the [Guild]
---
---@param packet WorldPacket @ : the [WorldPacket] to be sent to the [Player]s
---@param rankId uint8 @ : the rank ID
function Guild:SendPacketToRanked(packet, rankId) end

---
--- Disbands the [Guild]
function Guild:Disband() end

---
--- Adds the specified [Player] to the [Guild] at the specified rank.
---
--- If no rank is specified, defaults to none.
---
---@param player Player @ : the [Player] to be added to the guild
---@param rankId uint8 @ : the rank ID
function Guild:AddMember(player, rankId) end

---
--- Removes the specified [Player] from the [Guild].
---
---@param player Player @ : the [Player] to be removed from the guild
---@param isDisbanding bool @ : default 'false', should only be set to 'true' if the guild is triggered to disband
function Guild:DeleteMember(player, isDisbanding) end

---
--- Promotes/demotes the [Player] to the specified rank.
---
---@param player Player @ : the [Player] to be promoted/demoted
---@param rankId uint8 @ : the rank ID
function Guild:SetMemberRank(player, rankId) end

return Guild

